SharkPeerFS: create component
SharkPeerFS: added component that supports format SharkCredentials
SharkPeerFS: added component that supports format ASAPSharkCertificates
SharkPeerFS: create component
SharkPeerFS: added component that supports format shark/messenger
ASAPInternalPeerFS: setting up ASAPEngine based on sub folders in ./TestHost
ASAPInternalPeerFS: set up: SharkCredentials in folder ./TestHost/SharkCredentials
ASAPInternalPeerFS: set up: ASAPSharkCertificates in folder ./TestHost/ASAPSharkCertificates
ASAPInternalPeerFS: set up: shark/messenger in folder ./TestHost/shark%2Fmessenger
ASAPPeerFS: activate online messages on that peer
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): (SharkCredentials) created new online message sender
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): (ASAPSharkCertificates) created new online message sender
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): (shark/messenger) created new online message sender
SharkPeerFS: cannot read hub description - ok, maybe there are non
InMemoASAPKeyStore: create new keypair since requested but missing
InMemoASAPKeyStore: create key pair
InMemoASAPKeyStore: restored keys
InMemoASAPKeyStore: restored keys
InMemoASAPKeyStore: restored keys
ASAPInternalChunkFS: meta file does not exist / set up: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): asap management storage not set - no propagation of channel creation
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
SharkNetMessengerComponentImpl: MAKE URI LISTENER PUBLIC AGAIN. Thank you :)
SharkPeerFS: shark system started
ASAPHubManagerImpl(TestHost_gh1avHu0000kgC): hub manager thread started
ASAPHubManagerImpl(TestHost_gh1avHu0000kgC): start a new round
ASAPHubManagerImpl(TestHost_gh1avHu0000kgC): wait before next round (in ms): 600000
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): (shark/messenger) online message sender already running
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content changed - save status
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send online message...
ASAPInternalPeerFS: getOnlinePeers called | no (more) peers: 
ASAPOnlineMessageSenderEngineSide: no online peers
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): message written to local storage - but could not write to open asap connection: no online peers
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): ... done sending online message
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): (shark/messenger) online message sender already running
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content changed - save status
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send online message...
ASAPInternalPeerFS: getOnlinePeers called | no (more) peers: 
ASAPOnlineMessageSenderEngineSide: no online peers
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): message written to local storage - but could not write to open asap connection: no online peers
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): ... done sending online message
TCPServerSocketAcceptor: start socket factory - no race condition assumed
SocketFactory: socket factory running - accept connections on port: 9999
SharkNetMessengerApp: Socket open to connect on port: 9999
SocketFactory: connection attempt accepted: socket created
TCPServerSocketAcceptor: new stream pair created
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): decide whether to pursue this new encounter: StreamPair (session: no ID | endpoint: P2_mj1avHu0000B3E)
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): should connect to P2_mj1avHu0000B3E ?
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): P2_mj1avHu0000B3E not on deny list
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): P2_mj1avHu0000B3E no parallel open connection
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): device/peer not in encounteredDevices - add 2025-04-05 15:53:56.477
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): remember streamPair: StreamPair (session: no ID | endpoint: P2_mj1avHu0000B3E)
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): remember encounter: P2_mj1avHu0000B3E
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): call asap peer to handle connection
ASAPSessionImpl(constructor): is: SocketInputStream | os: SocketOutputStream
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): handleConnection
ASAPInternalPeerFS: announce new era
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): era not forced - incremented era to 1
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): setup new era by cloning previous chunk meta data: 1 <- 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): going to clone: sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS: meta file does not exist / set up: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 1 | metafile: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPInternalChunkFS(sender: null | era: 1 | metafile: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): done cloning: sender: null | era: 1 | metafile: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): era incremented
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): launched new asapConnection thread, total number is now: 1
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): asap peers is handling session: TestHost_gh1avHu0000kgC <--> <unkown yet> | type: internet | encrypted: false | sign: false
SocketFactory: resume waiting for new connections on port 9999
ASAPInternalPeerFS: start sending interest for apps/formats
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send interest for app/format: SharkCredentials
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send encounterMap with interest: {}
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send interest for app/format: ASAPSharkCertificates
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send encounterMap with interest: {}
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send interest for app/format: shark/messenger
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send encounterMap with interest: {}
ASAPSessionImpl(to: unknown yet): start reading
ASAPSessionImpl(to: unknown yet): back from reading
ASAPSessionImpl(to: unknown yet): read valid pdu, remember meeting this peer and going to process pdu
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): asap connection started, got a peername: P2_mj1avHu0000B3E
ASAPInternalPeerFS: #online peers: 1 | P2_mj1avHu0000B3E
ASAPInternalPeerFS: getOnlinePeers called | #online peers: 1 | P2_mj1avHu0000B3E
SharkPKIComponentImpl(TestHost_gh1avHu0000kgC): notified about changes in peer list: [P2_mj1avHu0000B3E]
ASAPStorageBasedCertificates: readCertificatesFromStorage oldestEra/thisEra: 0 | 0
ASAPInternalChunkFS: meta file does not exist / set up: ./TestHost/ASAPSharkCertificates/0/asap%2Fcertificate.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/ASAPSharkCertificates/0/asap%2Fcertificate.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/ASAPSharkCertificates/0/asap%2Fcertificate.meta
exists:true
canWrite:true
ASAPStorageBasedCertificates: readReceivedCertificates
ASAPStorageBasedCertificates: look for chunk storage...
ASAPStorageBasedCertificates: ...got it: owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true
ASAPStorageBasedCertificates: got sender list: []
ASAPInternalChunkFS: meta file does already exists: ./TestHost/ASAPSharkCertificates/0/asap%2Fcertificate.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/ASAPSharkCertificates/0/asap%2Fcertificate.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/ASAPSharkCertificates/0/asap%2Fcertificate.meta
exists:true
canWrite:true
ASAPInternalChunkFS: meta file does already exists: ./TestHost/ASAPSharkCertificates/0/asap%2Fcertificate.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/ASAPSharkCertificates/0/asap%2Fcertificate.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/ASAPSharkCertificates/0/asap%2Fcertificate.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): asap management storage not set - no propagation of channel creation
ASAPStorageBasedCertificates: got ownerCertificateChannel
ASAPStorageBasedCertificates: created address
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): new ASAP session: TestHost_gh1avHu0000kgC <--> P2_mj1avHu0000B3E | type: internet | encrypted: false | sign: false
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): to: P2_mj1avHu0000B3EASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/SharkCredentials
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): handle interest from: P2_mj1avHu0000B3E | app: SharkCredentials | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): transmit chunks from 0 to era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor release locks
ASAPSessionImpl(to: P2_mj1avHu0000B3E): start reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): back from reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): to: P2_mj1avHu0000B3EASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/ASAPSharkCertificates
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): handle interest from: P2_mj1avHu0000B3E | app: ASAPSharkCertificates | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): transmit chunks from 0 to era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor release locks
ASAPSessionImpl(to: P2_mj1avHu0000B3E): start reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): back from reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): to: P2_mj1avHu0000B3EASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/shark%2Fmessenger
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): handle interest from: P2_mj1avHu0000B3E | app: shark/messenger | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): transmit chunks from 0 to era: 1
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): workingEra: 0 | lastEra: 0 | this.era: 1
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): sendChunks: sender: TestHost_gh1avHu0000kgC | encounteredPeer: P2_mj1avHu0000B3E | workingEra: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): start iterating chunks with working era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): chunkUrl: sn://universal | isPublic: true | len: 938 | recipients: []
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send chunk
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): remembered delivered to P2_mj1avHu0000B3E
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): ended iterating local chunks
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor release locks
ASAPSessionImpl(to: P2_mj1avHu0000B3E): start reading
SocketFactory: connection attempt accepted: socket created
TCPServerSocketAcceptor: new stream pair created
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): decide whether to pursue this new encounter: StreamPair (session: no ID | endpoint: P1_Ri1avHu0000P54)
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): should connect to P1_Ri1avHu0000P54 ?
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): P1_Ri1avHu0000P54 not on deny list
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): P1_Ri1avHu0000P54 no parallel open connection
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): device/peer not in encounteredDevices - add 2025-04-05 15:53:56.641
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): remember streamPair: StreamPair (session: no ID | endpoint: P1_Ri1avHu0000P54)
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): remember encounter: P1_Ri1avHu0000P54
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): call asap peer to handle connection
ASAPSessionImpl(constructor): is: SocketInputStream | os: SocketOutputStream
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): handleConnection
ASAPInternalPeerFS: announce new era
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): content not changed - era not changed
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): launched new asapConnection thread, total number is now: 2
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): asap peers is handling session: TestHost_gh1avHu0000kgC <--> <unkown yet> | type: internet | encrypted: false | sign: false
ASAPInternalPeerFS: start sending interest for apps/formats
SocketFactory: resume waiting for new connections on port 9999
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send interest for app/format: SharkCredentials
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send encounterMap with interest: {}
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send interest for app/format: ASAPSharkCertificates
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send encounterMap with interest: {}
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send interest for app/format: shark/messenger
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send encounterMap with interest: {P2_mj1avHu0000B3E=0}
ASAPSessionImpl(to: unknown yet): start reading
ASAPSessionImpl(to: unknown yet): back from reading
ASAPSessionImpl(to: unknown yet): read valid pdu, remember meeting this peer and going to process pdu
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): asap connection started, got a peername: P1_Ri1avHu0000P54
ASAPInternalPeerFS: #online peers: 2 | P2_mj1avHu0000B3E|||P1_Ri1avHu0000P54
ASAPInternalPeerFS: getOnlinePeers called | #online peers: 2 | P2_mj1avHu0000B3E|||P1_Ri1avHu0000P54
SharkPKIComponentImpl(TestHost_gh1avHu0000kgC): notified about changes in peer list: [P2_mj1avHu0000B3E, P1_Ri1avHu0000P54]
SharkPeerFS(BREAK 1): ConcurrentModification
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): new ASAP session: TestHost_gh1avHu0000kgC <--> P1_Ri1avHu0000P54 | type: internet | encrypted: false | sign: false
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): to: P1_Ri1avHu0000P54ASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/SharkCredentials
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): handle interest from: P1_Ri1avHu0000P54 | app: SharkCredentials | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): transmit chunks from 0 to era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor release locks
ASAPSessionImpl(to: P1_Ri1avHu0000P54): start reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): back from reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): to: P1_Ri1avHu0000P54ASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/ASAPSharkCertificates
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): handle interest from: P1_Ri1avHu0000P54 | app: ASAPSharkCertificates | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): transmit chunks from 0 to era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor release locks
ASAPSessionImpl(to: P1_Ri1avHu0000P54): start reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): back from reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): to: P1_Ri1avHu0000P54ASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/shark%2Fmessenger
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): handle interest from: P1_Ri1avHu0000P54 | app: shark/messenger | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): transmit chunks from 0 to era: 1
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): workingEra: 0 | lastEra: 0 | this.era: 1
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): sendChunks: sender: TestHost_gh1avHu0000kgC | encounteredPeer: P1_Ri1avHu0000P54 | workingEra: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): start iterating chunks with working era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): chunkUrl: sn://universal | isPublic: true | len: 938 | recipients: []
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send chunk
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): remembered delivered to P1_Ri1avHu0000P54
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): ended iterating local chunks
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): going to route messages from P2_mj1avHu0000B3E
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): sendChunks: sender: P2_mj1avHu0000B3E | encounteredPeer: P1_Ri1avHu0000P54 | workingEra: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): start iterating chunks with working era: 0
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor release locks
ASAPSessionImpl(to: P1_Ri1avHu0000P54): start reading
ASAPPDUReader(to: P2_mj1avHu0000B3E): ASAPException when reading from stream
ASAPSessionImpl(to: P2_mj1avHu0000B3E): back from reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): connection broken
ASAPSessionImpl(to: P2_mj1avHu0000B3E): close input stream
ASAPSessionImpl(to: P2_mj1avHu0000B3E): problem when reading from stream (close asap session and stream):  | issued by: ASAPException: read -1: no more data in stream
>>>>>>>>>>>>> stack trace:
net.sharksystem.asap.ASAPException: read -1: no more data in stream
	at net.sharksystem.asap.utils.ASAPSerialization.readByte(ASAPSerialization.java:232)
	at net.sharksystem.asap.protocol.ASAP_Modem_Impl.readPDU(ASAP_Modem_Impl.java:209)
	at net.sharksystem.asap.protocol.ASAPSessionImpl$ASAPPDUReader.run(ASAPSessionImpl.java:521)
<<<<<<<<<<<< stack trace
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): thread terminated connected to: P2_mj1avHu0000B3E
ASAPInternalPeerFS: announce new era
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): content not changed - era not changed
ASAPInternalPeerFS: #online peers: 1 | P1_Ri1avHu0000P54
ASAPInternalPeerFS: getOnlinePeers called | #online peers: 1 | P1_Ri1avHu0000P54
SharkPKIComponentImpl(TestHost_gh1avHu0000kgC): notified about changes in peer list: [P1_Ri1avHu0000P54]
SharkPeerFS(BREAK 1): ConcurrentModification
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): terminated: TestHost_gh1avHu0000kgC <--> P2_mj1avHu0000B3E | type: internet | encrypted: false | sign: false
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): thread terminated - number of running threads is now: 1
ASAPPDUReader(to: P1_Ri1avHu0000P54): ASAPException when reading from stream
ASAPSessionImpl(to: P1_Ri1avHu0000P54): back from reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): connection broken
ASAPSessionImpl(to: P1_Ri1avHu0000P54): close input stream
ASAPSessionImpl(to: P1_Ri1avHu0000P54): problem when reading from stream (close asap session and stream):  | issued by: ASAPException: read -1: no more data in stream
>>>>>>>>>>>>> stack trace:
net.sharksystem.asap.ASAPException: read -1: no more data in stream
	at net.sharksystem.asap.utils.ASAPSerialization.readByte(ASAPSerialization.java:232)
	at net.sharksystem.asap.protocol.ASAP_Modem_Impl.readPDU(ASAP_Modem_Impl.java:209)
	at net.sharksystem.asap.protocol.ASAPSessionImpl$ASAPPDUReader.run(ASAPSessionImpl.java:521)
<<<<<<<<<<<< stack trace
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): thread terminated connected to: P1_Ri1avHu0000P54
ASAPInternalPeerFS: announce new era
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): content not changed - era not changed
ASAPInternalPeerFS: no (more) peers: 
ASAPInternalPeerFS: getOnlinePeers called | no (more) peers: 
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): terminated: TestHost_gh1avHu0000kgC <--> P1_Ri1avHu0000P54 | type: internet | encrypted: false | sign: false
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): thread terminated - number of running threads is now: 0
SocketFactory: connection attempt accepted: socket created
TCPServerSocketAcceptor: new stream pair created
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): decide whether to pursue this new encounter: StreamPair (session: no ID | endpoint: P1_Ri1avHu0000P54)
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): should connect to P1_Ri1avHu0000P54 ?
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): P1_Ri1avHu0000P54 not on deny list
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): P1_Ri1avHu0000P54 no parallel open connection
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): this.waitBeforeReconnect == 2000
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): 
2025-04-05 15:53:59.022 == now
2025-04-05 15:53:57.022 == should reconnect if met before that moment
2025-04-05 15:53:56.642 == last encounter
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): device/peer (P1_Ri1avHu0000P54) in encounteredDevices list?
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): yes - should connect: P1_Ri1avHu0000P54
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): remember streamPair: StreamPair (session: no ID | endpoint: P1_Ri1avHu0000P54)
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): remember encounter: P1_Ri1avHu0000P54
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): call asap peer to handle connection
ASAPSessionImpl(constructor): is: SocketInputStream | os: SocketOutputStream
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): handleConnection
ASAPInternalPeerFS: announce new era
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): content not changed - era not changed
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): launched new asapConnection thread, total number is now: 1
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): asap peers is handling session: TestHost_gh1avHu0000kgC <--> <unkown yet> | type: internet | encrypted: false | sign: false
SocketFactory: resume waiting for new connections on port 9999
ASAPInternalPeerFS: start sending interest for apps/formats
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send interest for app/format: SharkCredentials
SocketFactory: connection attempt accepted: socket created
TCPServerSocketAcceptor: new stream pair created
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send encounterMap with interest: {}
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send interest for app/format: ASAPSharkCertificates
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send encounterMap with interest: {}
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send interest for app/format: shark/messenger
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send encounterMap with interest: {P2_mj1avHu0000B3E=0, P1_Ri1avHu0000P54=0}
ASAPSessionImpl(to: unknown yet): start reading
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): decide whether to pursue this new encounter: StreamPair (session: no ID | endpoint: P2_mj1avHu0000B3E)
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): should connect to P2_mj1avHu0000B3E ?
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): P2_mj1avHu0000B3E not on deny list
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): P2_mj1avHu0000B3E no parallel open connection
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): this.waitBeforeReconnect == 2000
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): 
2025-04-05 15:53:59.032 == now
2025-04-05 15:53:57.032 == should reconnect if met before that moment
2025-04-05 15:53:56.478 == last encounter
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): device/peer (P2_mj1avHu0000B3E) in encounteredDevices list?
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): yes - should connect: P2_mj1avHu0000B3E
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): remember streamPair: StreamPair (session: no ID | endpoint: P2_mj1avHu0000B3E)
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): remember encounter: P2_mj1avHu0000B3E
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): call asap peer to handle connection
ASAPSessionImpl(constructor): is: SocketInputStream | os: SocketOutputStream
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): handleConnection
ASAPInternalPeerFS: announce new era
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): content not changed - era not changed
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): launched new asapConnection thread, total number is now: 2
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): asap peers is handling session: TestHost_gh1avHu0000kgC <--> <unkown yet> | type: internet | encrypted: false | sign: false
SocketFactory: resume waiting for new connections on port 9999
ASAPInternalPeerFS: start sending interest for apps/formats
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send interest for app/format: SharkCredentials
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send encounterMap with interest: {}
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send interest for app/format: ASAPSharkCertificates
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): send encounterMap with interest: {}
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send interest for app/format: shark/messenger
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send encounterMap with interest: {P2_mj1avHu0000B3E=0, P1_Ri1avHu0000P54=0}
ASAPSessionImpl(to: unknown yet): start reading
ASAPSessionImpl(to: unknown yet): back from reading
ASAPSessionImpl(to: unknown yet): read valid pdu, remember meeting this peer and going to process pdu
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): asap connection started, got a peername: P1_Ri1avHu0000P54
ASAPInternalPeerFS: #online peers: 1 | P1_Ri1avHu0000P54
ASAPInternalPeerFS: getOnlinePeers called | #online peers: 1 | P1_Ri1avHu0000P54
SharkPKIComponentImpl(TestHost_gh1avHu0000kgC): notified about changes in peer list: [P1_Ri1avHu0000P54]
SharkPeerFS(BREAK 1): ConcurrentModification
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): new ASAP session: TestHost_gh1avHu0000kgC <--> P1_Ri1avHu0000P54 | type: internet | encrypted: false | sign: false
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): to: P1_Ri1avHu0000P54ASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/SharkCredentials
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): handle interest from: P1_Ri1avHu0000P54 | app: SharkCredentials | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): transmit chunks from 0 to era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor release locks
ASAPSessionImpl(to: P1_Ri1avHu0000P54): start reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): back from reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): to: P1_Ri1avHu0000P54ASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/ASAPSharkCertificates
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): handle interest from: P1_Ri1avHu0000P54 | app: ASAPSharkCertificates | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): transmit chunks from 0 to era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor release locks
ASAPSessionImpl(to: P1_Ri1avHu0000P54): start reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): back from reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): to: P1_Ri1avHu0000P54ASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/shark%2Fmessenger
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): handle interest from: P1_Ri1avHu0000P54 | app: shark/messenger | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): transmit chunks from 1 to era: 1
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): going to route messages from P2_mj1avHu0000B3E
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): sendChunks: sender: P2_mj1avHu0000B3E | encounteredPeer: P1_Ri1avHu0000P54 | workingEra: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): start iterating chunks with working era: 0
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor release locks
ASAPSessionImpl(to: P1_Ri1avHu0000P54): start reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): back from reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): to: P1_Ri1avHu0000P54ASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/shark%2Fmessenger
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P1_Ri1avHu0000P54): ASAPPDUExecutor call handleASAPAssimilate
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): handle assimilate pdu received from P1_Ri1avHu0000P54 | era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): called: get incoming chunk
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): got incoming chunk storage ASAPChunkStorageFS: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54 | shark/messenger | -1
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): get local chunk to copy channel data
ASAPInternalChunkFS: meta file does not exist / set up: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/1/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 1 | metafile: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/1/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/1/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): create new chunk to assimilate received data
ASAPInternalChunkFS: meta file does not exist / set up: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: P1_Ri1avHu0000P54 | oldestEra: 0 | era: 0 | routing: true): forced setting era to 0
ASAPEngineFS(owner: P1_Ri1avHu0000P54 | oldestEra: 0 | era: 0 | routing: true): this.era == previousEra - nothing to do
ASAPEngineFS(owner: P1_Ri1avHu0000P54 | oldestEra: 0 | era: 0 | routing: true): era incremented
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): copy local meta data into newly created incoming chunk
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): new incoming chunk created: sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): take data to local chunk or transient message: sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): going to read message: [0, 363)
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): going to read last message: from offset 363 to end of file - total length: 731
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): got hop list: []
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): assimilated: senderE2E: P1_Ri1avHu0000P54, uri: sn://universal, eraSender: 0 | listener: ASAPPeerFS
ASAPPeerFS(TestHost_gh1avHu0000kgC): extract messages from chunk and notify listener
ASAPLogHelper: try getting storage in folder ./TestHost/shark%2Fmessenger
ASAPLogHelper: got existing asap engine
ASAPLogHelper: got incoming channel of P1_Ri1avHu0000P54
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 0 | rootDir: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54
ASAPLogHelper: got messages uri: sn://universal / era: 0
ASAPPeerFS(TestHost_gh1avHu0000kgC): 
+++++++++++++++++++++++++++++++++++++++ chunkReceived +++++++++++++++++++++++++++++++++++++++++
E2E|P2P: P1_Ri1avHu0000P54 | P1_Ri1avHu0000P54 | uri: sn://universal | era: 0 | appFormat: shark/messenger
hop#0: sender: P1_Ri1avHu0000P54 | verified: false | encrypted: false | connectionType: Internet
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ASAPPeerFS(TestHost_gh1avHu0000kgC): notify listeners; number: 3
ASAPSessionImpl(to: P1_Ri1avHu0000P54): asap pdu executor release locks
SharkNetMessengerComponentImpl: MAKE URI LISTENER PUBLIC AGAIN. Thank you :)
ASAPSessionImpl(to: P1_Ri1avHu0000P54): start reading
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 2 | toEra: 1 | rootDir: ./TestHost/shark%2Fmessenger
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 2147483646 | rootDir: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 2147483646 | rootDir: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/1/sn%3A%2F%2Funiversal.meta
ASAPSessionImpl(to: unknown yet): back from reading
ASAPSessionImpl(to: unknown yet): read valid pdu, remember meeting this peer and going to process pdu
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): asap connection started, got a peername: P2_mj1avHu0000B3E
ASAPInternalPeerFS: #online peers: 2 | P2_mj1avHu0000B3E|||P1_Ri1avHu0000P54
ASAPInternalPeerFS: getOnlinePeers called | #online peers: 2 | P2_mj1avHu0000B3E|||P1_Ri1avHu0000P54
SharkPKIComponentImpl(TestHost_gh1avHu0000kgC): notified about changes in peer list: [P2_mj1avHu0000B3E, P1_Ri1avHu0000P54]
SharkPeerFS(BREAK 1): ConcurrentModification
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): new ASAP session: TestHost_gh1avHu0000kgC <--> P2_mj1avHu0000B3E | type: internet | encrypted: false | sign: false
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): to: P2_mj1avHu0000B3EASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/SharkCredentials
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): handle interest from: P2_mj1avHu0000B3E | app: SharkCredentials | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): transmit chunks from 0 to era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor release locks
ASAPSessionImpl(to: P2_mj1avHu0000B3E): start reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): back from reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): to: P2_mj1avHu0000B3EASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/ASAPSharkCertificates
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): handle interest from: P2_mj1avHu0000B3E | app: ASAPSharkCertificates | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): transmit chunks from 0 to era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor release locks
ASAPSessionImpl(to: P2_mj1avHu0000B3E): start reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): back from reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): to: P2_mj1avHu0000B3EASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/shark%2Fmessenger
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor call handleASAPInterest
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): handle interest from: P2_mj1avHu0000B3E | app: shark/messenger | uri:null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): received encounterMap: null
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): transmit chunks from 1 to era: 1
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): there are no information before that era; we only deliver information from previous eras - nothing todo here.
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): going to route messages from P1_Ri1avHu0000P54
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): sendChunks: sender: P1_Ri1avHu0000P54 | encounteredPeer: P2_mj1avHu0000B3E | workingEra: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): start iterating chunks with working era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): chunkUrl: sn://universal | isPublic: true | len: 731 | recipients: []
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): send chunk
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): remembered delivered to P2_mj1avHu0000B3E
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): #recipients == #deliveredTo chunk delivered to any potential remotePeer - could drop it
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): drop flag set false - engine does not remove delivered chunks
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor release locks
ASAPSessionImpl(to: P2_mj1avHu0000B3E): start reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): back from reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): read valid pdu, remember meeting this peer and going to process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): to: P2_mj1avHu0000B3EASAPPDUExecutor: engine: ASAPEngineFS | listener: ASAPPeerFS | folder: ./TestHost/shark%2Fmessenger
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor going to wait for stream access
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor got stream access - process pdu
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor calls engine: ASAPEngineFS
ASAPPDUExecutor(to: P2_mj1avHu0000B3E): ASAPPDUExecutor call handleASAPAssimilate
DefaultSecurityAdministrator: ok
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): handle assimilate pdu received from P2_mj1avHu0000B3E | era: 0
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): called: get incoming chunk
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): got incoming chunk storage ASAPChunkStorageFS: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E | shark/messenger | -1
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): get local chunk to copy channel data
ASAPInternalChunkFS: meta file does not exist / set up: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/1/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 1 | metafile: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/1/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/1/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): create new chunk to assimilate received data
ASAPInternalChunkFS: meta file does not exist / set up: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: P2_mj1avHu0000B3E | oldestEra: 0 | era: 0 | routing: true): forced setting era to 0
ASAPEngineFS(owner: P2_mj1avHu0000B3E | oldestEra: 0 | era: 0 | routing: true): this.era == previousEra - nothing to do
ASAPEngineFS(owner: P2_mj1avHu0000B3E | oldestEra: 0 | era: 0 | routing: true): era incremented
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): copy local meta data into newly created incoming chunk
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): new incoming chunk created: sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): take data to local chunk or transient message: sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): going to read message: [0, 363)
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): going to read last message: from offset 363 to end of file - total length: 731
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): got hop list: []
ASAPInternalChunkFS(sender: null | era: 0 | metafile: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta): \nDEBUGGING_Multihop_Bug: write meta data to:
file2WriteMetaData:/Users/cemreozen/Desktop/bashScriptsSNM/./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
exists:true
canWrite:true
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): assimilated: senderE2E: P2_mj1avHu0000B3E, uri: sn://universal, eraSender: 0 | listener: ASAPPeerFS
ASAPPeerFS(TestHost_gh1avHu0000kgC): extract messages from chunk and notify listener
ASAPLogHelper: try getting storage in folder ./TestHost/shark%2Fmessenger
ASAPLogHelper: got existing asap engine
ASAPLogHelper: got incoming channel of P2_mj1avHu0000B3E
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 0 | rootDir: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E
ASAPLogHelper: got messages uri: sn://universal / era: 0
ASAPPeerFS(TestHost_gh1avHu0000kgC): 
+++++++++++++++++++++++++++++++++++++++ chunkReceived +++++++++++++++++++++++++++++++++++++++++
E2E|P2P: P2_mj1avHu0000B3E | P2_mj1avHu0000B3E | uri: sn://universal | era: 0 | appFormat: shark/messenger
hop#0: sender: P2_mj1avHu0000B3E | verified: false | encrypted: false | connectionType: Internet
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ASAPPeerFS(TestHost_gh1avHu0000kgC): notify listeners; number: 3
ASAPSessionImpl(to: P2_mj1avHu0000B3E): asap pdu executor release locks
ASAPSessionImpl(to: P2_mj1avHu0000B3E): start reading
SharkNetMessengerComponentImpl: MAKE URI LISTENER PUBLIC AGAIN. Thank you :)
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 2 | toEra: 1 | rootDir: ./TestHost/shark%2Fmessenger
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 2147483646 | rootDir: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 2147483646 | rootDir: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/1/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/1/sn%3A%2F%2Funiversal.meta
ASAPPDUReader(to: P1_Ri1avHu0000P54): ASAPException when reading from stream
ASAPSessionImpl(to: P1_Ri1avHu0000P54): back from reading
ASAPSessionImpl(to: P1_Ri1avHu0000P54): connection broken
ASAPSessionImpl(to: P1_Ri1avHu0000P54): close input stream
ASAPSessionImpl(to: P1_Ri1avHu0000P54): problem when reading from stream (close asap session and stream):  | issued by: ASAPException: read -1: no more data in stream
>>>>>>>>>>>>> stack trace:
net.sharksystem.asap.ASAPException: read -1: no more data in stream
	at net.sharksystem.asap.utils.ASAPSerialization.readByte(ASAPSerialization.java:232)
	at net.sharksystem.asap.protocol.ASAP_Modem_Impl.readPDU(ASAP_Modem_Impl.java:209)
	at net.sharksystem.asap.protocol.ASAPSessionImpl$ASAPPDUReader.run(ASAPSessionImpl.java:521)
<<<<<<<<<<<< stack trace
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): thread terminated connected to: P1_Ri1avHu0000P54
ASAPInternalPeerFS: announce new era
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): content not changed - era not changed
ASAPInternalPeerFS: #online peers: 1 | P2_mj1avHu0000B3E
ASAPInternalPeerFS: getOnlinePeers called | #online peers: 1 | P2_mj1avHu0000B3E
SharkPKIComponentImpl(TestHost_gh1avHu0000kgC): notified about changes in peer list: [P2_mj1avHu0000B3E]
SharkPeerFS(BREAK 1): ConcurrentModification
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): terminated: TestHost_gh1avHu0000kgC <--> P1_Ri1avHu0000P54 | type: internet | encrypted: false | sign: false
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): thread terminated - number of running threads is now: 1
ASAPPDUReader(to: P2_mj1avHu0000B3E): ASAPException when reading from stream
ASAPSessionImpl(to: P2_mj1avHu0000B3E): back from reading
ASAPSessionImpl(to: P2_mj1avHu0000B3E): connection broken
ASAPSessionImpl(to: P2_mj1avHu0000B3E): close input stream
ASAPSessionImpl(to: P2_mj1avHu0000B3E): problem when reading from stream (close asap session and stream):  | issued by: ASAPException: read -1: no more data in stream
>>>>>>>>>>>>> stack trace:
net.sharksystem.asap.ASAPException: read -1: no more data in stream
	at net.sharksystem.asap.utils.ASAPSerialization.readByte(ASAPSerialization.java:232)
	at net.sharksystem.asap.protocol.ASAP_Modem_Impl.readPDU(ASAP_Modem_Impl.java:209)
	at net.sharksystem.asap.protocol.ASAPSessionImpl$ASAPPDUReader.run(ASAPSessionImpl.java:521)
<<<<<<<<<<<< stack trace
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): thread terminated connected to: P2_mj1avHu0000B3E
ASAPInternalPeerFS: announce new era
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 0 | routing: true): content not changed - era not changed
ASAPEngineFS(owner: TestHost_gh1avHu0000kgC | oldestEra: 0 | era: 1 | routing: true): content not changed - era not changed
ASAPInternalPeerFS: no (more) peers: 
ASAPInternalPeerFS: getOnlinePeers called | no (more) peers: 
ASAPEncounterManagerImpl(TestHost_gh1avHu0000kgC): terminated: TestHost_gh1avHu0000kgC <--> P2_mj1avHu0000B3E | type: internet | encrypted: false | sign: false
ASAPInternalPeerFS: ASAPInternalPeerFS(TestHost_gh1avHu0000kgC): thread terminated - number of running threads is now: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 2 | toEra: 1 | rootDir: ./TestHost/shark%2Fmessenger
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 2147483646 | rootDir: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 2147483646 | rootDir: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/1/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/1/sn%3A%2F%2Funiversal.meta
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 2 | toEra: 1 | rootDir: ./TestHost/shark%2Fmessenger
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 2147483646 | rootDir: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54
ASAPChunkStorageFS: create ASAPInMemoMessages
ASAPInMemoMessages: format: shark/messenger | uri: sn://universal | fromEra: 0 | toEra: 2147483646 | rootDir: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/1/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P1_Ri1avHu0000P54/1/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 0
ASAPInMemoMessages: getChunk with era: 0
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/0/sn%3A%2F%2Funiversal.meta
ASAPInMemoMessages: reached era: 1
ASAPInMemoMessages: getChunk with era: 1
ASAPInternalChunkFS: meta file does already exists: ./TestHost/shark%2Fmessenger/P2_mj1avHu0000B3E/1/sn%3A%2F%2Funiversal.meta
